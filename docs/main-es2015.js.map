{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cw-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'website';\r\n}\r\n","<cw-header></cw-header>\r\n<div class='content'>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    ),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatGridListModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cw-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id='header'>\r\n    <!--replace with image-->\r\n    <a href='.' class='no-decor'><span class='title'>Animals and Things</span></a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Image } from 'src/app/interface/image';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  readonly images: Image[];\r\n  readonly imagesPath: String;\r\n\r\n  constructor() {\r\n    this.images = [\r\n      {path: 'butter.jpg', description: 'Butterfly', title: null},\r\n      {path: 'caterpill.jpg', description: 'Cursed pill.', title: null},\r\n      {path: 'dragon.jpg', description: 'It\\'s a dragonfly.', title: null},\r\n      {path: 'katydid.jpg', description: 'How did this get in my apartment.', title: null},\r\n      {path: 'catanger.jpg', description: 'Soon...', title: null},\r\n      {path: 'catconsume.jpg', description: '...', title: null},\r\n      {path: 'catgod.jpg', description: 'I am your god.', title: null},\r\n      {path: 'ripcat.jpg', description: 'Save me.', title: null},\r\n      {path: 'leaf.jpg', description: 'Photogenic leaf.', title: null},\r\n      {path: 'flower.jpg', description: 'Tree flower.', title: null},\r\n      {path: 'doggos.jpg', description: 'Dog hungers.', title: null},\r\n      {path: 'snail.jpg', description: 'Moving shell.', title: null},\r\n      {path: 'pride.jpg', description: 'Happy pride.', title: null},\r\n      {path: 'fountainrainbow.jpg', description: 'Rainbow', title: null},\r\n    ];\r\n\r\n    this.imagesPath = environment.production ? '/website/assets/images' : '/assets/images';\r\n  }\r\n\r\n  ngOnInit(): void { \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // @ts-ignore\r\n    twttr.widgets.load();\r\n  }\r\n}\r\n","<blockquote class=\"twitter-tweet tw-align-center\">\r\n    <p lang=\"en\" dir=\"ltr\">\r\n        Tell me why bro is out here holding CS angles on me... \r\n        <a href=\"https://t.co/nmvJWPX5X0\">pic.twitter.com/nmvJWPX5X0</a>\r\n        <img src=\"https://pbs.twimg.com/media/EEs09ksUEAEXU3p?format=jpg&name=small\" />\r\n    </p>\r\n    &mdash; Kevin Toy (@CLG_PewPewU) \r\n    <a href=\"https://twitter.com/CLG_PewPewU/status/1174090369560014848?ref_src=twsrc%5Etfw\">September 17, 2019</a>\r\n</blockquote> \r\n\r\n<mat-accordion>\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Insects</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(0,2)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(2,4)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Cats</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(4,6)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(6,8)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Green</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(8,10)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Other Animal</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(10,12)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Other</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(12,14)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n</mat-accordion>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}