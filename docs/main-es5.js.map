{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","enableTracing","declarations","imports","providers","bootstrap","HeaderComponent","HomeComponent","images","description","imagesPath","production","twttr","widgets","load","environment","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,SAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,8B;AAAA;AAAA;ACPzB;;AACA;;AACE;;AACF;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMC,SAAS,GAAW,CACxB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADwB,CAA1B;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAbJ,CACP,6DAAaC,OAAb,CACEJ,SADF,EAEE;AAAEK,qBAAa,EAAE;AAAjB,OAFF,CAE0B;AAF1B,OADO,EAKP,uEALO,EAMP,4FANO,EAOP,wEAPO,EAQP,8EARO,EASP,oEATO,EAUP,sEAVO,EAWP,6EAXO,CAaI;;;;0HAGFF,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,yEAmBkB,EAlBlB,mEAkBkB;AAlBL,gFAOb,uEAPa,EAQb,4FARa,EASb,wEATa,EAUb,8EAVa,EAWb,oEAXa,EAYb,sEAZa,EAab,6EAba;AAkBK,O;AALD,K;;;;;sEAKRA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,yEAFY,EAGZ,mEAHY,CADN;AAMRC,iBAAO,EAAE,CACP,6DAAaH,OAAb,CACEJ,SADF,EAEE;AAAEK,yBAAa,EAAE;AAAjB,WAFF,CAE0B;AAF1B,WADO,EAKP,uEALO,EAMP,4FANO,EAOP,wEAPO,EAQP,8EARO,EASP,oEATO,EAUP,sEAVO,EAWP,6EAXO,CAND;AAmBRG,mBAAS,EAAE,EAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,gC;AAAA,c;AAAA,a;AAAA,4E;AAAA;AAAA;ACP5B;;AAEI;;AAA6B;;AAAoB;;AAAkB;;AAAO;;AAC9E;;;;;;;;sEDIaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAUhB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAehB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAUhB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAgBhB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAgBhB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;;;AAgBhB;;AACI;;AACI;;AAAwC;;AAAxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAPW;;AAAA;;AAAyD;;AAAA;;AAGpD;;AAAA;;;;QD7HfY,a;AAIX,+BAAc;AAAA;;AACZ,aAAKC,MAAL,GAAc,CACZ;AAACX,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,WAAlC;AAA+CjB,eAAK,EAAE;AAAtD,SADY,EAEZ;AAACK,cAAI,EAAE,eAAP;AAAwBY,qBAAW,EAAE,cAArC;AAAqDjB,eAAK,EAAE;AAA5D,SAFY,EAGZ;AAACK,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,oBAAlC;AAAwDjB,eAAK,EAAE;AAA/D,SAHY,EAIZ;AAACK,cAAI,EAAE,aAAP;AAAsBY,qBAAW,EAAE,mCAAnC;AAAwEjB,eAAK,EAAE;AAA/E,SAJY,EAKZ;AAACK,cAAI,EAAE,cAAP;AAAuBY,qBAAW,EAAE,SAApC;AAA+CjB,eAAK,EAAE;AAAtD,SALY,EAMZ;AAACK,cAAI,EAAE,gBAAP;AAAyBY,qBAAW,EAAE,KAAtC;AAA6CjB,eAAK,EAAE;AAApD,SANY,EAOZ;AAACK,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,gBAAlC;AAAoDjB,eAAK,EAAE;AAA3D,SAPY,EAQZ;AAACK,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,UAAlC;AAA8CjB,eAAK,EAAE;AAArD,SARY,EASZ;AAACK,cAAI,EAAE,UAAP;AAAmBY,qBAAW,EAAE,kBAAhC;AAAoDjB,eAAK,EAAE;AAA3D,SATY,EAUZ;AAACK,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,cAAlC;AAAkDjB,eAAK,EAAE;AAAzD,SAVY,EAWZ;AAACK,cAAI,EAAE,YAAP;AAAqBY,qBAAW,EAAE,cAAlC;AAAkDjB,eAAK,EAAE;AAAzD,SAXY,EAYZ;AAACK,cAAI,EAAE,WAAP;AAAoBY,qBAAW,EAAE,eAAjC;AAAkDjB,eAAK,EAAE;AAAzD,SAZY,EAaZ;AAACK,cAAI,EAAE,WAAP;AAAoBY,qBAAW,EAAE,cAAjC;AAAiDjB,eAAK,EAAE;AAAxD,SAbY,EAcZ;AAACK,cAAI,EAAE,qBAAP;AAA8BY,qBAAW,EAAE,SAA3C;AAAsDjB,eAAK,EAAE;AAA7D,SAdY,CAAd;AAiBA,aAAKkB,UAAL,GAAkB,yEAAYC,UAAZ,GAAyB,wBAAzB,GAAoD,gBAAtE;AACD;;;;mCAEO,CACP;;;0CAEc;AACb;AACAC,eAAK,CAACC,OAAN,CAAcC,IAAd;AACD;;;;;;;uBA/BUP,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,kb;AAAA;AAAA;ACV1B;;AACI;;AACI;;AACA;;AAAkC;;AAA0B;;AAC5D;;AACJ;;AACA;;AACA;;AAAyF;;AAAkB;;AAC/G;;AAEA;;AACI;;AACI;;AACI;;AAAiB;;AAAO;;AAC5B;;AACA;;AACI;;AACA;;AAUA;;AACJ;;AAEA;;AACI;;AACA;;AAUA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAiB;;AAAI;;AACzB;;AACA;;AACI;;AACA;;AAUA;;AACJ;;AAEA;;AACI;;AACA;;AAUA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAiB;;AAAK;;AAC1B;;AAEA;;AACI;;AACA;;AAUA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAiB;;AAAY;;AACjC;;AAEA;;AACI;;AACA;;AAUA;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAiB;;AAAK;;AAC1B;;AAEA;;AACI;;AACA;;AAUA;;AACJ;;AACJ;;AAEJ;;;;AA/H2B;;AAAA;;AAeA;;AAAA;;AAoBA;;AAAA;;AAeA;;AAAA;;AAqBA;;AAAA;;AAqBA;;AAAA;;AAqBA;;AAAA;;;;;;;;;sEDxHdA,a,EAAa;cALzB,uDAKyB;eALf;AACTd,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMoB,WAAW,GAAG;AACzBJ,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBK,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cw-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'website';\r\n}\r\n","<cw-header></cw-header>\r\n<div class='content'>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    ),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatGridListModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cw-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id='header'>\r\n    <!--replace with image-->\r\n    <a href='.' class='no-decor'><span class='title'>Animals and Things</span></a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Image } from 'src/app/interface/image';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  readonly images: Image[];\r\n  readonly imagesPath: String;\r\n\r\n  constructor() {\r\n    this.images = [\r\n      {path: 'butter.jpg', description: 'Butterfly', title: null},\r\n      {path: 'caterpill.jpg', description: 'Cursed pill.', title: null},\r\n      {path: 'dragon.jpg', description: 'It\\'s a dragonfly.', title: null},\r\n      {path: 'katydid.jpg', description: 'How did this get in my apartment.', title: null},\r\n      {path: 'catanger.jpg', description: 'Soon...', title: null},\r\n      {path: 'catconsume.jpg', description: '...', title: null},\r\n      {path: 'catgod.jpg', description: 'I am your god.', title: null},\r\n      {path: 'ripcat.jpg', description: 'Save me.', title: null},\r\n      {path: 'leaf.jpg', description: 'Photogenic leaf.', title: null},\r\n      {path: 'flower.jpg', description: 'Tree flower.', title: null},\r\n      {path: 'doggos.jpg', description: 'Dog hungers.', title: null},\r\n      {path: 'snail.jpg', description: 'Moving shell.', title: null},\r\n      {path: 'pride.jpg', description: 'Happy pride.', title: null},\r\n      {path: 'fountainrainbow.jpg', description: 'Rainbow', title: null},\r\n    ];\r\n\r\n    this.imagesPath = environment.production ? '/website/assets/images' : '/assets/images';\r\n  }\r\n\r\n  ngOnInit(): void { \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // @ts-ignore\r\n    twttr.widgets.load();\r\n  }\r\n}\r\n","<blockquote class=\"twitter-tweet tw-align-center\">\r\n    <p lang=\"en\" dir=\"ltr\">\r\n        Tell me why bro is out here holding CS angles on me... \r\n        <a href=\"https://t.co/nmvJWPX5X0\">pic.twitter.com/nmvJWPX5X0</a>\r\n        <img src=\"https://pbs.twimg.com/media/EEs09ksUEAEXU3p?format=jpg&name=small\" />\r\n    </p>\r\n    &mdash; Kevin Toy (@CLG_PewPewU) \r\n    <a href=\"https://twitter.com/CLG_PewPewU/status/1174090369560014848?ref_src=twsrc%5Etfw\">September 17, 2019</a>\r\n</blockquote> \r\n\r\n<mat-accordion>\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Insects</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(0,2)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(2,4)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Cats</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(4,6)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(6,8)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Green</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(8,10)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Other Animal</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"3:5\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(10,12)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>Other</mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n        <mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n            <mat-grid-tile></mat-grid-tile>\r\n            <mat-grid-tile *ngFor='let image of images.slice(12,14)'>\r\n                <mat-card>\r\n                    <a href='{{imagesPath}}/{{image.path}}'><img mat-card-image src='{{imagesPath}}/{{image.path}}'></a>\r\n                    <mat-card-content>\r\n                        <p>\r\n                            {{image.description}}\r\n                        </p>\r\n                    </mat-card-content>\r\n                </mat-card>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile></mat-grid-tile>\r\n        </mat-grid-list>\r\n    </mat-expansion-panel>\r\n\r\n</mat-accordion>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}